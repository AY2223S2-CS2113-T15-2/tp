@startuml
'https://plantuml.com/class-diagram
!include Style.puml
title Secret Storage Diagram

component SecretStorage {
    class Secret {
        {static}- ILLEGAL_CHARS_PATTERN: String
        - folderName: String
        - uid: String
        - name: String
        + Secret(name: String): void
        + Secret(name: String, folder: String): void
        {static}+ isIllegalName(name: String): String
        + getUid(): String
        + setName(name: String): void
        + getName(): String
        + getFolderName(): String
        + setFolderName(folderName: String)
        + toStringForDatabase(): String
        + getRevealStr(): String
    }
    class BasicPassword {
        - username: String
        - password: String
        - url: String
        + BasicPassword(name: String, username: String,
            password: String, url: String): void
        + BasicPassword(name: String, folderName: String,
                      username: String,
                      password: String, url: String): void
        + getPassword(): String
        + getUrl(): String
        + toStringForDatabase(): String
        + getRevealStr(): String
        + getUsername(): String
    }
    class CreditCard {
        - EXPIRY_DATE_FMT: String
        - CREDIT_CARD_NUMBER_FMT: String
        - fullName: String
        - creditCardNumber: String
        - cvcNumber: int
        - expiryDate: String
        + CreditCard(name: String, fullName: String, creditCardNumber: String,
             cvcNumber: String, expiryDate: String): void
        + CreditCard(name: String, folderName: String, fullName: String, creditCardNumber: String,
             cvcNumber: String, expiryDate: String): void
        + getExpiryDate(): String
        + setExpiryDate(expiryDate: String): void
        + getFullName(): String
        + setFullName(fullName: String): void
        + getCreditCardNumber(): String
        + setCreditCardNumber(creditCardNumber: String): void
        + getCvcNumber(): int
        + setCvcNumber(cvcNumber: int): void
        + getRevealStr(): String
        + toStringForDatabase(): String
    }
    class CryptoWallet {
        - username: String
        - privateKey: String
        - seedPhrase: String
        - urls: ArrayList<String>
        + CryptoWallet(name: String, username: String,
                privateKey: String, seedPhrase: String): void
        + CryptoWallet(name: String, folderName: String, username: String,
                privateKey: String, seedPhrase: String): void
        + CryptoWallet(name: String, folderName: String, username: String,
                privateKey: String, seedPhrase: String, urls: ArrayList<String>): void
        + getUsername(): String
        + setUsername(username: String): void
        + getPrivateKey(): String
        + getSeedPhrase(): String
        + setSeedPhrase(seedPhrase: String): void
        + getUrls(): ArrayList<String>
        + setUrls(urls: ArrayList<String>): void
        + addUrl(url: String): void
        + getRevealStr(): String
        + toStringForDatabase(): String
    }
    class NUSNet {
        - nusNetId: String
        - password: String
        + NUSNet(name: String,
            nusNetId: String, password: String): void
        + NUSNet(name: String, folderName: String,
            nusNetId: String, password: String): void
        + getPassword(): String
        + getnusNetId(): String
        + toStringForDatabase(): String
        + getRevealStr(): String
    }
    class StudentID {
        - studentID: String
        + StudentID(name: String, studentID: String)
        + StudentID(name: String, folderName: String, studentID: String)
        + getStudentID(): String
        + toStringForDatabase(): String
        + getRevealStr(): String
    }
    class WifiPassword {
        - username: String
        - password: String
        + WifiPassword(name: String, username: String,
                password: String): void
        + WifiPassword(name: String, folderName: String,
                username: String, password: String): void
        + getUsername(): String
        + setUsername(username: String): void
        + removeUsername(): void
        + getPassword(): String
        + setPassword(): void
        + getRevealStr(): String
        + toStringForDatabase(): String
    }
    Secret <|-- BasicPassword
    Secret <|-- CreditCard
    Secret <|-- CryptoWallet
    Secret <|-- NUSNet
    Secret <|-- StudentID
    Secret <|-- WifiPassword

    class SecretMaster {
        - DEFAULT_FOLDER: String
        - ALLOWED_NAMES_REGEX: String
        - secretSearcher: SecretSearcher
        - secretEnumerator: SecretEnumerator
        - folders: HashSet<String>
        - secretName: HashSet<String>
        + SecretMaster()
        + SecretMaster(secretSearcher: SecretSearcher, secretEnumerator: SecretEnumerator): void
        + isLegalName(name: String): boolean
        + getFolders(): HashSet<String>
        + getSecretSearcher: SecretSearcher
        + getSecretEnumerator: SecretEnumerator
        + getSecretNames: HashSet<String>
        + createFolder(folderName: String)
        + getByIndex(index: int): Secret
        + getByIndex(index: int, folderName: String): Secret
        + listSecrets(): ArrayList<Secret>
        + listSecrets(folderName: String): ArrayList<Secret>
        + getByName(name: String): Secret
        + addSecret(secret: Secret): void
        + editSecret(secret: Secret, newName: String, newFolderName: String): void
        + removeSecret(secret: Secret, newName: String, newFolderName: String): void
    }
    class SecretEnumerator {
        - storage: ArrayList<Secret>
        - folders: Hashtable<String, ArrayList<Secret>>
        + SecretEnumerator(): void
        + SecretEnumerator(storage: ArrayList<Secret>, folders: Hashtable<String, ArrayList<Secret>>)
        + createFolder(folderName: String): void
        + deleteFolder(folderName: String): void
        + get(index: int): Secret
        + get(index: int, folderName: String): Secret
        + getList(): ArrayList<Secret>
        + getList(folderName: String): ArrayList<Secret>
        + add(secret: Secret): void
        + delete(secret: Secret): void
        + size(): int
        + getFolders(): HashSet<String>
    }
    class SecretSearcher {
        - storage: Hashtable<String, Secret>
        - folders: Hashtable<String, Hashtable<String, Secret>>
        + SecretSearcher(): void
        + SecretSearcher(storage: Hashtable<String, Secret>,
            folders: Hashtable<String, Hashtable<String, Secret>>): void
        + get(secretId: String): Secret
        + createFolder(folderName: String): void
        + deleteFolder(folderName: String): void
        + add(secret: Secret): void
        + delete(secret: Secret): void
        + getNames(): HashSet<String>
    }
    SecretMaster *-up- "1" SecretSearcher
    SecretMaster *-up- "1" SecretEnumerator
    SecretEnumerator *-up- "*" BasicPassword
    SecretEnumerator *-up- "*" CreditCard
    SecretEnumerator *-up- "*" CryptoWallet
    SecretEnumerator *-up- "*" NUSNet
    SecretEnumerator *-up- "*" StudentID
    SecretEnumerator *-up- "*" WifiPassword
    SecretSearcher *-up- "*" BasicPassword
    SecretSearcher *-up- "*" CreditCard
    SecretSearcher *-up- "*" CryptoWallet
    SecretSearcher *-up- "*" NUSNet
    SecretSearcher *-up- "*" StudentID
    SecretSearcher *-up- "*" WifiPassword
}
@enduml